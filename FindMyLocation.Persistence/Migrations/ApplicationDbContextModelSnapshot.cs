// <auto-generated />
using System;
using FindMyLocation.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FindMyLocation.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FindMyLocation.Domain.Entities.FourSqaureVenues", b =>
                {
                    b.Property<int>("locationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cross_street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("distance")
                        .HasColumnType("int");

                    b.Property<string>("fsq_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<string>("locality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("po_box")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("post_town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timezone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("locationId");

                    b.ToTable("FourSqaureVenues");
                });

            modelBuilder.Entity("FindMyLocation.Domain.Entities.ImageModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<string>("prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ImageModels");
                });

            modelBuilder.Entity("FindMyLocation.Domain.Entities.ModelFour", b =>
                {
                    b.Property<int>("locationId")
                        .HasColumnType("int");

                    b.ToTable("ModelFours");
                });
#pragma warning restore 612, 618
        }
    }
}
